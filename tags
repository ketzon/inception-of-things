!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/florian/inception-of-things/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
#close-debug	vagrant/terramino-go/web/terramino.css	/^#close-debug {$/;"	i
#close-debug	vagrant/terramino-go/web/terramino.css	/^#close-debug,$/;"	i
#close-debug:hover	vagrant/terramino-go/web/terramino.css	/^#close-debug:hover,$/;"	i
#debug-button	vagrant/terramino-go/web/terramino.css	/^#debug-button {$/;"	i
#debug-button	vagrant/terramino-go/web/terramino.css	/^#debug-button,$/;"	i
#debug-button::before	vagrant/terramino-go/web/terramino.css	/^#debug-button::before {$/;"	i
#debug-button:hover	vagrant/terramino-go/web/terramino.css	/^#debug-button:hover,$/;"	i
#debug-info	vagrant/terramino-go/web/terramino.css	/^#debug-info {$/;"	i
#debug-modal	vagrant/terramino-go/web/terramino.css	/^#debug-modal {$/;"	i
#mode-toggle	vagrant/terramino-go/web/terramino.css	/^#mode-toggle {$/;"	i
#mode-toggle:hover	vagrant/terramino-go/web/terramino.css	/^#mode-toggle:hover {$/;"	i
.container	vagrant/terramino-go/web/terramino.css	/^.container {$/;"	c
.current-score-section	vagrant/terramino-go/web/terramino.css	/^.current-score-section {$/;"	c
.footer	vagrant/terramino-go/web/terramino.css	/^.footer {$/;"	c
.footer a	vagrant/terramino-go/web/terramino.css	/^.footer a {$/;"	s
.footer a:hover	vagrant/terramino-go/web/terramino.css	/^.footer a:hover {$/;"	s
.game-header	vagrant/terramino-go/web/terramino.css	/^.game-header {$/;"	c
.game-instructions	vagrant/terramino-go/web/terramino.css	/^.game-instructions {$/;"	c
.game-panel	vagrant/terramino-go/web/terramino.css	/^.game-panel {$/;"	c
.game-title	vagrant/terramino-go/web/terramino.css	/^.game-title {$/;"	c
.game-wrapper	vagrant/terramino-go/web/terramino.css	/^.game-wrapper {$/;"	c
.hashicorp-logos	vagrant/terramino-go/web/terramino.css	/^.hashicorp-logos {$/;"	c
.hashicorp-logos img	vagrant/terramino-go/web/terramino.css	/^.hashicorp-logos img {$/;"	s
.highscore-section	vagrant/terramino-go/web/terramino.css	/^.highscore-section {$/;"	c
.mode-toggle .moon	vagrant/terramino-go/web/terramino.css	/^.mode-toggle .moon {$/;"	c
.mode-toggle .sun	vagrant/terramino-go/web/terramino.css	/^.mode-toggle .sun {$/;"	c
.mode-toggle .sun	vagrant/terramino-go/web/terramino.css	/^.mode-toggle .sun,$/;"	c
.next-blocks	vagrant/terramino-go/web/terramino.css	/^.next-blocks {$/;"	c
.next-blocks canvas	vagrant/terramino-go/web/terramino.css	/^.next-blocks canvas {$/;"	s
.score-board	vagrant/terramino-go/web/terramino.css	/^.score-board {$/;"	c
.score-label	vagrant/terramino-go/web/terramino.css	/^.score-label {$/;"	c
.score-section	vagrant/terramino-go/web/terramino.css	/^.score-section {$/;"	c
.score-text	vagrant/terramino-go/web/terramino.css	/^.score-text {$/;"	c
.side-panel	vagrant/terramino-go/web/terramino.css	/^.side-panel {$/;"	c
.trophy-icon	vagrant/terramino-go/web/terramino.css	/^.trophy-icon {$/;"	c
.white	vagrant/terramino-go/web/terramino.css	/^.white {$/;"	c
.yellow	vagrant/terramino-go/web/terramino.css	/^.yellow {$/;"	c
:root	vagrant/terramino-go/web/terramino.css	/^:root {$/;"	s
AnonymousFunction3195e2530100	vagrant/terramino-go/web/terramino.js	/^document.addEventListener("keydown", function (e) {$/;"	f
Board	vagrant/terramino-go/internal/game/board.go	/^type Board struct {$/;"	s	package:game
Board	vagrant/terramino-go/internal/game/game.go	/^	Board *Board$/;"	m	struct:game.Game	typeref:typename:*Board
BoardHeight	vagrant/terramino-go/internal/game/board.go	/^	BoardHeight = 20$/;"	c	package:game
BoardWidth	vagrant/terramino-go/internal/game/board.go	/^	BoardWidth  = 10$/;"	c	package:game
Client	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^	Client    vs.ClientService$/;"	m	struct:hvs_client.HVSClient	typeref:typename:vs.ClientService
ConfigureHVS	vagrant/terramino-go/internal/highscore/highscore.go	/^func (m *Manager) ConfigureHVS(hvsClient *hvs_client.HVSClient) {$/;"	f	struct:highscore.Manager
ConfigureRedis	vagrant/terramino-go/internal/highscore/highscore.go	/^func (m *Manager) ConfigureRedis(host, port, password string) {$/;"	f	struct:highscore.Manager
CurrentPiece	vagrant/terramino-go/internal/game/board.go	/^	CurrentPiece *Piece$/;"	m	struct:game.Board	typeref:typename:*Piece
Debug Information	vagrant/terramino-go/web/index.html	/^      <h3>Debug Information<\/h3>$/;"	j
Development	vagrant/terramino-go/README.md	/^## Development$/;"	s	chapter:Terramino Go
EOF	vagrant/install-dependencies.sh	/^cat > \/usr\/local\/bin\/reload-terramino << 'EOF'$/;"	h
Game	vagrant/terramino-go/internal/game/game.go	/^type Game struct {$/;"	s	package:game
GameOver	vagrant/terramino-go/internal/game/board.go	/^	GameOver     bool$/;"	m	struct:game.Board	typeref:typename:bool
GameOver	vagrant/terramino-go/internal/game/board.go	/^	GameOver bool       `json:"gameOver"`$/;"	m	struct:game.State	typeref:typename:bool
GetRedisInfo	vagrant/terramino-go/internal/highscore/highscore.go	/^func (m *Manager) GetRedisInfo() (host, port, status string) {$/;"	f	struct:highscore.Manager	typeref:typename:(host, port, status string)
GetScore	vagrant/terramino-go/internal/highscore/highscore.go	/^func (m *Manager) GetScore() int {$/;"	f	struct:highscore.Manager	typeref:typename:int
GetSecret	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^func (c *HVSClient) GetSecret(appName string, secretName string) (string, error) {$/;"	f	struct:hvs_client.HVSClient	typeref:typename:(string, error)
GetState	vagrant/terramino-go/internal/game/board.go	/^func (b *Board) GetState() State {$/;"	f	struct:game.Board	typeref:typename:State
Grid	vagrant/terramino-go/internal/game/board.go	/^	Grid         [][]string$/;"	m	struct:game.Board	typeref:typename:[][]string
Grid	vagrant/terramino-go/internal/game/board.go	/^	Grid     [][]string `json:"grid"`$/;"	m	struct:game.State	typeref:typename:[][]string
HVSClient	vagrant/terramino-go/internal/highscore/highscore.go	/^	HVSClient      *hvs_client.HVSClient$/;"	m	struct:highscore.Manager	typeref:typename:*hvs_client.HVSClient
HVSClient	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^type HVSClient struct {$/;"	s	package:hvs_client
HandleHTTP	vagrant/terramino-go/internal/highscore/highscore.go	/^func (m *Manager) HandleHTTP(w http.ResponseWriter, r *http.Request) {$/;"	f	struct:highscore.Manager
I	vagrant/terramino-go/web/terramino.js	/^  I: "#7B42BC", \/\/ Terraform$/;"	p	class:colors
I	vagrant/terramino-go/web/terramino.js	/^  I: [$/;"	p	class:tetrominos
J	vagrant/terramino-go/web/terramino.js	/^  J: "#2E71E5", \/\/ Vagrant$/;"	p	class:colors
J	vagrant/terramino-go/web/terramino.js	/^  J: [$/;"	p	class:tetrominos
L	vagrant/terramino-go/web/terramino.js	/^  L: "#02A8EF", \/\/ Packer$/;"	p	class:colors
L	vagrant/terramino-go/web/terramino.js	/^  L: [$/;"	p	class:tetrominos
Manager	vagrant/terramino-go/internal/highscore/highscore.go	/^type Manager struct {$/;"	s	package:highscore
MovePiece	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) MovePiece(dx, dy int) bool {$/;"	f	struct:game.Game	typeref:typename:bool
NewBoard	vagrant/terramino-go/internal/game/board.go	/^func NewBoard() *Board {$/;"	f	package:game	typeref:typename:*Board
NewGame	vagrant/terramino-go/internal/game/game.go	/^func NewGame() *Game {$/;"	f	package:game	typeref:typename:*Game
NewHVSClient	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^func NewHVSClient() *HVSClient {$/;"	f	package:hvs_client	typeref:typename:*HVSClient
NewManager	vagrant/terramino-go/internal/highscore/highscore.go	/^func NewManager(ctx context.Context, appName string) *Manager {$/;"	f	package:highscore	typeref:typename:*Manager
O	vagrant/terramino-go/web/terramino.js	/^  O: "#FFFC25", \/\/ Vault$/;"	p	class:colors
O	vagrant/terramino-go/web/terramino.js	/^  O: [$/;"	p	class:tetrominos
OrgID	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^	OrgID     string$/;"	m	struct:hvs_client.HVSClient	typeref:typename:string
Piece	vagrant/terramino-go/internal/game/board.go	/^type Piece struct {$/;"	s	package:game
PieceType	vagrant/terramino-go/internal/game/board.go	/^	PieceType string$/;"	m	struct:game.Piece	typeref:typename:string
Pieces	vagrant/terramino-go/internal/game/board.go	/^var Pieces = []Piece{$/;"	v	package:game
Project Structure	vagrant/terramino-go/README.md	/^## Project Structure$/;"	s	chapter:Terramino Go
ProjectID	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^	ProjectID string$/;"	m	struct:hvs_client.HVSClient	typeref:typename:string
Quick Start	vagrant/terramino-go/README.md	/^## Quick Start$/;"	s	chapter:Terramino Go
RotatePiece	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) RotatePiece() bool {$/;"	f	struct:game.Game	typeref:typename:bool
S	vagrant/terramino-go/web/terramino.js	/^  S: "#14C6CB", \/\/ Waypoint$/;"	p	class:colors
S	vagrant/terramino-go/web/terramino.js	/^  S: [$/;"	p	class:tetrominos
SCORE_CLEARLINE	vagrant/terramino-go/web/terramino.js	/^const SCORE_CLEARLINE = 100;$/;"	C
SCORE_NEWTETROMINO	vagrant/terramino-go/web/terramino.js	/^const SCORE_NEWTETROMINO = 10;$/;"	C
Score	vagrant/terramino-go/internal/game/board.go	/^	Score        int$/;"	m	struct:game.Board	typeref:typename:int
Score	vagrant/terramino-go/internal/game/board.go	/^	Score    int        `json:"score"`$/;"	m	struct:game.State	typeref:typename:int
SetScore	vagrant/terramino-go/internal/highscore/highscore.go	/^func (m *Manager) SetScore(score int) {$/;"	f	struct:highscore.Manager
Shape	vagrant/terramino-go/internal/game/board.go	/^	Shape     [][]bool$/;"	m	struct:game.Piece	typeref:typename:[][]bool
SpawnPiece	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) SpawnPiece() {$/;"	f	struct:game.Game
State	vagrant/terramino-go/internal/game/board.go	/^type State struct {$/;"	s	package:game
T	vagrant/terramino-go/web/terramino.js	/^  T: "#EC585D", \/\/ Boundary$/;"	p	class:colors
T	vagrant/terramino-go/web/terramino.js	/^  T: [$/;"	p	class:tetrominos
Terramino	vagrant/terramino-go/web/index.html	/^        <h1 class="game-title">Terramino<\/h1>$/;"	h
Terramino Go	vagrant/terramino-go/README.md	/^# Terramino Go$/;"	c
TerraminoServer	vagrant/terramino-go/main.go	/^type TerraminoServer struct {$/;"	s	package:main
ToJSON	vagrant/terramino-go/internal/game/board.go	/^func (s State) ToJSON() ([]byte, error) {$/;"	f	struct:game.State	typeref:typename:([]byte, error)
X	vagrant/terramino-go/internal/game/board.go	/^	X, Y      int$/;"	m	struct:game.Piece	typeref:typename:int
Y	vagrant/terramino-go/internal/game/board.go	/^	X, Y      int$/;"	m	struct:game.Piece	typeref:typename:int
Z	vagrant/terramino-go/web/terramino.js	/^  Z: "#DC477D", \/\/ Consul$/;"	p	class:colors
Z	vagrant/terramino-go/web/terramino.js	/^  Z: [$/;"	p	class:tetrominos
addScore	vagrant/terramino-go/web/terramino.js	/^function addScore(points) {$/;"	f
appName	vagrant/terramino-go/internal/highscore/highscore.go	/^	appName        string$/;"	m	struct:highscore.Manager	typeref:typename:string
body	vagrant/terramino-go/web/terramino.css	/^body {$/;"	s
body.light-mode	vagrant/terramino-go/web/terramino.css	/^body.light-mode {$/;"	c
body.light-mode .footer a	vagrant/terramino-go/web/terramino.css	/^body.light-mode .footer a {$/;"	s
body.light-mode .mode-toggle .moon	vagrant/terramino-go/web/terramino.css	/^body.light-mode .mode-toggle .moon {$/;"	c
body.light-mode .mode-toggle .sun	vagrant/terramino-go/web/terramino.css	/^body.light-mode .mode-toggle .sun {$/;"	c
body.light-mode .trophy-icon	vagrant/terramino-go/web/terramino.css	/^body.light-mode .trophy-icon {$/;"	c
body.light-mode::after	vagrant/terramino-go/web/terramino.css	/^body.light-mode::after {$/;"	c
body.light-mode::before	vagrant/terramino-go/web/terramino.css	/^body.light-mode::before,$/;"	c
canvas	vagrant/terramino-go/web/terramino.css	/^canvas,$/;"	s
canvas	vagrant/terramino-go/web/terramino.js	/^const canvas = document.getElementById("game");$/;"	C
checkCollision	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) checkCollision(piece *Piece) bool {$/;"	f	struct:game.Game	typeref:typename:bool
checkHighScore	vagrant/terramino-go/web/terramino.js	/^function checkHighScore() {$/;"	f
clearLines	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) clearLines() {$/;"	f	struct:game.Game
clearScreen	vagrant/terramino-go/cmd/cli/main.go	/^	clearScreen = "\\033[H\\033[2J"$/;"	c	package:main
clearTerminal	vagrant/terramino-go/cmd/cli/main.go	/^func clearTerminal() {$/;"	f	package:main
close-debug	vagrant/terramino-go/web/index.html	/^      <button id="close-debug">Close<\/button>$/;"	I
colors	vagrant/terramino-go/web/terramino.js	/^const colors = {$/;"	c
context	vagrant/terramino-go/web/terramino.js	/^const context = canvas.getContext("2d");$/;"	C
count	vagrant/terramino-go/web/terramino.js	/^let count = 0;$/;"	v
ctx	vagrant/terramino-go/internal/highscore/highscore.go	/^	ctx            context.Context$/;"	m	struct:highscore.Manager	typeref:typename:context.Context
debug-button	vagrant/terramino-go/web/index.html	/^    <button id="debug-button">Debug<\/button>$/;"	I
debug-info	vagrant/terramino-go/web/index.html	/^      <pre id="debug-info"><\/pre>$/;"	I
debug-modal	vagrant/terramino-go/web/index.html	/^    <div id="debug-modal">$/;"	I
drawGhostPiece	vagrant/terramino-go/web/terramino.js	/^function drawGhostPiece() {$/;"	f
drawNextTetrominos	vagrant/terramino-go/web/terramino.js	/^function drawNextTetrominos() {$/;"	f
envHandler	vagrant/terramino-go/main.go	/^func envHandler(w http.ResponseWriter, r *http.Request) {$/;"	f	package:main
escapeKey	vagrant/terramino-go/cmd/cli/main.go	/^	escapeKey   = 27$/;"	c	package:main
game	vagrant/terramino-go/internal/game/board.go	/^package game$/;"	p
game	vagrant/terramino-go/internal/game/game.go	/^package game$/;"	p
game	vagrant/terramino-go/web/index.html	/^          <canvas width="320" height="640" id="game"><\/canvas>$/;"	I
gameOver	vagrant/terramino-go/web/terramino.js	/^let gameOver = false;$/;"	v
generateSequence	vagrant/terramino-go/web/terramino.js	/^function generateSequence() {$/;"	f
getHighScore	vagrant/terramino-go/web/terramino.js	/^async function getHighScore() {$/;"	f
getNextTetromino	vagrant/terramino-go/web/terramino.js	/^function getNextTetromino() {$/;"	f
getRandomInt	vagrant/terramino-go/web/terramino.js	/^function getRandomInt(min, max) {$/;"	f
getRedisClient	vagrant/terramino-go/internal/highscore/highscore.go	/^func (m *Manager) getRedisClient() *redis.Client {$/;"	f	struct:highscore.Manager	typeref:typename:*redis.Client
grid	vagrant/terramino-go/web/terramino.js	/^const grid = 32;$/;"	C
hardDrop	vagrant/terramino-go/web/terramino.js	/^function hardDrop() {$/;"	f
highScore	vagrant/terramino-go/web/terramino.js	/^var highScore = 0; \/\/ Initialize high score$/;"	v
highScoreManager	vagrant/terramino-go/main.go	/^	highScoreManager *highscore.Manager$/;"	m	struct:main.TerraminoServer	typeref:typename:*highscore.Manager
highscore	vagrant/terramino-go/internal/highscore/highscore.go	/^package highscore$/;"	p
highscore	vagrant/terramino-go/web/index.html	/^              <span id="highscore" class="score-text yellow">00000000<\/span>$/;"	I
html::after	vagrant/terramino-go/web/terramino.css	/^html::after {$/;"	s
html::before	vagrant/terramino-go/web/terramino.css	/^html::before {$/;"	s
html::before	vagrant/terramino-go/web/terramino.css	/^html::before,$/;"	s
hvs_client	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^package hvs_client$/;"	p
isLineFull	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) isLineFull(y int) bool {$/;"	f	struct:game.Game	typeref:typename:bool
isValidMove	vagrant/terramino-go/web/terramino.js	/^function isValidMove(matrix, cellRow, cellCol) {$/;"	f
lightenHexColor	vagrant/terramino-go/web/terramino.js	/^function lightenHexColor(hex, percent) {$/;"	f
lockPiece	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) lockPiece() {$/;"	f	struct:game.Game
loop	vagrant/terramino-go/web/terramino.js	/^function loop() {$/;"	f
main	vagrant/terramino-go/cmd/cli/main.go	/^func main() {$/;"	f	package:main
main	vagrant/terramino-go/cmd/cli/main.go	/^package main$/;"	p
main	vagrant/terramino-go/main.go	/^func main() {$/;"	f	package:main
main	vagrant/terramino-go/main.go	/^package main$/;"	p
mode-toggle	vagrant/terramino-go/web/index.html	/^    <button id="mode-toggle" class="mode-toggle">$/;"	I
moveCursor	vagrant/terramino-go/cmd/cli/main.go	/^	moveCursor  = "\\033[%d;%dH"$/;"	c	package:main
newHighScore	vagrant/terramino-go/web/terramino.js	/^var newHighScore = false;$/;"	v
next-block-1	vagrant/terramino-go/web/index.html	/^            <canvas width="64" height="64" id="next-block-1"><\/canvas>$/;"	I
next-block-2	vagrant/terramino-go/web/index.html	/^            <canvas width="64" height="64" id="next-block-2"><\/canvas>$/;"	I
nextTetrominoQueue	vagrant/terramino-go/web/terramino.js	/^const nextTetrominoQueue = []; \/\/ Queue for the next tetrominos$/;"	C
onload	vagrant/terramino-go/web/terramino.js	/^window.onload = function () {$/;"	f	function:window
placeTetromino	vagrant/terramino-go/web/terramino.js	/^function placeTetromino() {$/;"	f
playfield	vagrant/terramino-go/web/terramino.js	/^const playfield = [];$/;"	C
rAF	vagrant/terramino-go/web/terramino.js	/^let rAF = null;$/;"	v
redisClient	vagrant/terramino-go/internal/highscore/highscore.go	/^	redisClient    *redis.Client$/;"	m	struct:highscore.Manager	typeref:typename:*redis.Client
redisHandler	vagrant/terramino-go/main.go	/^func (s *TerraminoServer) redisHandler(w http.ResponseWriter, r *http.Request) {$/;"	f	struct:main.TerraminoServer
redisHost	vagrant/terramino-go/internal/highscore/highscore.go	/^	redisHost      string$/;"	m	struct:highscore.Manager	typeref:typename:string
redisPassword	vagrant/terramino-go/internal/highscore/highscore.go	/^	redisPassword  string$/;"	m	struct:highscore.Manager	typeref:typename:string
redisPort	vagrant/terramino-go/internal/highscore/highscore.go	/^	redisPort      string$/;"	m	struct:highscore.Manager	typeref:typename:string
removeLine	vagrant/terramino-go/internal/game/game.go	/^func (g *Game) removeLine(y int) {$/;"	f	struct:game.Game
renderGame	vagrant/terramino-go/cmd/cli/main.go	/^func renderGame(g *game.Game) {$/;"	f	package:main
rotate	vagrant/terramino-go/web/terramino.js	/^function rotate(matrix) {$/;"	f
score	vagrant/terramino-go/web/index.html	/^              <span class="score-text white" id="score">00000000<\/span>$/;"	I
score	vagrant/terramino-go/web/terramino.js	/^var score = 0;$/;"	v
setHighScore	vagrant/terramino-go/web/terramino.js	/^async function setHighScore() {$/;"	f
showGameOver	vagrant/terramino-go/web/terramino.js	/^function showGameOver() {$/;"	f
spaceKey	vagrant/terramino-go/cmd/cli/main.go	/^	spaceKey    = 32$/;"	c	package:main
startGame	vagrant/terramino-go/cmd/cli/main.go	/^func startGame(reader *bufio.Reader) {$/;"	f	package:main
tetrominoSequence	vagrant/terramino-go/web/terramino.js	/^const tetrominoSequence = [];$/;"	C
tetrominos	vagrant/terramino-go/web/terramino.js	/^const tetrominos = {$/;"	c
updateHighScoreUI	vagrant/terramino-go/web/terramino.js	/^function updateHighScoreUI() {$/;"	f
updateScore	vagrant/terramino-go/web/terramino.js	/^function updateScore() {$/;"	f
useDirectRedis	vagrant/terramino-go/internal/highscore/highscore.go	/^	useDirectRedis bool$/;"	m	struct:highscore.Manager	typeref:typename:bool
vs	vagrant/terramino-go/internal/hvs_client/hvs_client.go	/^	vs "github.com\/hashicorp\/hcp-sdk-go\/clients\/cloud-vault-secrets\/stable\/2023-06-13\/client/;"	P	package:github.com/hashicorp/hcp-sdk-go/clients/cloud-vault-secrets/stable/2023-06-13/client/secret_service
